#version 330 core

layout(points) in;
//layout(points, max_vertices = 1) out;				//to draw points
layout(line_strip, max_vertices = 2) out;			//to draw lines
//layout(triangle_strip, max_vertices = 5) out;		//to draw rectangles

in vec4 vertexColor[];									// Output from vertex shader for each vertex
out vec4 fColor;									// Output to fragment shader

void main() {
	fColor = vertexColor[0]; // Point has only one vertex
	
	/////TO DRAW POINTS/////
	//gl_Position = gl_in[0].gl_Position;
	//EmitVertex();
	
	/////TO DRAW LINES/////
	gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.0, 0.0, 0.0);
    EmitVertex();

    gl_Position = gl_in[0].gl_Position + vec4(0.1, 0.0, 0.0, 0.0);
    EmitVertex();

	/////TO DRAW RECTANGLES/////
	//gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.1, 0.0, 0.0);
	//EmitVertex();

	//gl_Position = gl_in[0].gl_Position + vec4(0.1, 0.1, 0.0, 0.0);
	//EmitVertex();

	//gl_Position = gl_in[0].gl_Position + vec4(0.1, -0.1, 0.0, 0.0);
	//EmitVertex();

	//gl_Position = gl_in[0].gl_Position + vec4(-0.1, -0.1, 0.0, 0.0);
	//EmitVertex();

	//gl_Position = gl_in[0].gl_Position + vec4(-0.1, 0.1, 0.0, 0.0);
	//EmitVertex();

	EndPrimitive();
}